# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.6
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_CImg', [dirname(__file__)])
        except ImportError:
            import _CImg
            return _CImg
        if fp is not None:
            try:
                _mod = imp.load_module('_CImg', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _CImg = swig_import_helper()
    del swig_import_helper
else:
    import _CImg
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


cimg_version = _CImg.cimg_version
cimg_OS = _CImg.cimg_OS
cimg_file_separator = _CImg.cimg_file_separator
cimg_verbosity = _CImg.cimg_verbosity
cimg_display = _CImg.cimg_display
cimg_appname = _CImg.cimg_appname
_cimgdisplay_instance = _CImg._cimgdisplay_instance
_cimg_instance = _CImg._cimg_instance
_cimglist_instance = _CImg._cimglist_instance

def output(file=None):
  return _CImg.output(file)
output = _CImg.output

def info():
  return _CImg.info()
info = _CImg.info

def _exception_mode(*args):
  return _CImg._exception_mode(*args)
_exception_mode = _CImg._exception_mode

def exception_mode(*args):
  return _CImg.exception_mode(*args)
exception_mode = _CImg.exception_mode

def dialog(*args):
  return _CImg.dialog(*args)
dialog = _CImg.dialog

def eval(*args):
  return _CImg.eval(*args)
eval = _CImg.eval
class CImgException(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgException, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CImgException, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_message"] = _CImg.CImgException__message_set
    __swig_getmethods__["_message"] = _CImg.CImgException__message_get
    if _newclass:_message = _swig_property(_CImg.CImgException__message_get, _CImg.CImgException__message_set)
    def __init__(self, *args): 
        this = _CImg.new_CImgException(*args)
        try: self.this.append(this)
        except: self.this = this
    def what(self): return _CImg.CImgException_what(self)
    __swig_destroy__ = _CImg.delete_CImgException
    __del__ = lambda self : None;
CImgException_swigregister = _CImg.CImgException_swigregister
CImgException_swigregister(CImgException)
cvar = _CImg.cvar
t_normal = cvar.t_normal
t_red = cvar.t_red
t_bold = cvar.t_bold
t_purple = cvar.t_purple
t_green = cvar.t_green

class CImgInstanceException(CImgException):
    __swig_setmethods__ = {}
    for _s in [CImgException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgInstanceException, name, value)
    __swig_getmethods__ = {}
    for _s in [CImgException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CImgInstanceException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _CImg.new_CImgInstanceException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _CImg.delete_CImgInstanceException
    __del__ = lambda self : None;
CImgInstanceException_swigregister = _CImg.CImgInstanceException_swigregister
CImgInstanceException_swigregister(CImgInstanceException)

class CImgArgumentException(CImgException):
    __swig_setmethods__ = {}
    for _s in [CImgException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgArgumentException, name, value)
    __swig_getmethods__ = {}
    for _s in [CImgException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CImgArgumentException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _CImg.new_CImgArgumentException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _CImg.delete_CImgArgumentException
    __del__ = lambda self : None;
CImgArgumentException_swigregister = _CImg.CImgArgumentException_swigregister
CImgArgumentException_swigregister(CImgArgumentException)

class CImgIOException(CImgException):
    __swig_setmethods__ = {}
    for _s in [CImgException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgIOException, name, value)
    __swig_getmethods__ = {}
    for _s in [CImgException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CImgIOException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _CImg.new_CImgIOException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _CImg.delete_CImgIOException
    __del__ = lambda self : None;
CImgIOException_swigregister = _CImg.CImgIOException_swigregister
CImgIOException_swigregister(CImgIOException)

class CImgDisplayException(CImgException):
    __swig_setmethods__ = {}
    for _s in [CImgException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgDisplayException, name, value)
    __swig_getmethods__ = {}
    for _s in [CImgException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CImgDisplayException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _CImg.new_CImgDisplayException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _CImg.delete_CImgDisplayException
    __del__ = lambda self : None;
CImgDisplayException_swigregister = _CImg.CImgDisplayException_swigregister
CImgDisplayException_swigregister(CImgDisplayException)

class CImgWarningException(CImgException):
    __swig_setmethods__ = {}
    for _s in [CImgException]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgWarningException, name, value)
    __swig_getmethods__ = {}
    for _s in [CImgException]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, CImgWarningException, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _CImg.new_CImgWarningException(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _CImg.delete_CImgWarningException
    __del__ = lambda self : None;
CImgWarningException_swigregister = _CImg.CImgWarningException_swigregister
CImgWarningException_swigregister(CImgWarningException)


def warn(*args):
  return _CImg.warn(*args)
warn = _CImg.warn

def system(*args):
  return _CImg.system(*args)
system = _CImg.system

def endianness():
  return _CImg.endianness()
endianness = _CImg.endianness

def float2uint(*args):
  return _CImg.float2uint(*args)
float2uint = _CImg.float2uint

def uint2float(*args):
  return _CImg.uint2float(*args)
uint2float = _CImg.uint2float

def time():
  return _CImg.time()
time = _CImg.time

def tictoc(*args):
  return _CImg.tictoc(*args)
tictoc = _CImg.tictoc

def tic():
  return _CImg.tic()
tic = _CImg.tic

def toc():
  return _CImg.toc()
toc = _CImg.toc

def sleep(*args):
  return _CImg.sleep(*args)
sleep = _CImg.sleep

def _sleep(*args):
  return _CImg._sleep(*args)
_sleep = _CImg._sleep

def wait(*args):
  return _CImg.wait(*args)
wait = _CImg.wait

def srand():
  return _CImg.srand()
srand = _CImg.srand

def rol(*args):
  return _CImg.rol(*args)
rol = _CImg.rol

def ror(*args):
  return _CImg.ror(*args)
ror = _CImg.ror

def abs(*args):
  return _CImg.abs(*args)
abs = _CImg.abs

def xln(*args):
  return _CImg.xln(*args)
xln = _CImg.xln

def sinc(*args):
  return _CImg.sinc(*args)
sinc = _CImg.sinc

def mod(*args):
  return _CImg.mod(*args)
mod = _CImg.mod

def rand():
  return _CImg.rand()
rand = _CImg.rand

def crand():
  return _CImg.crand()
crand = _CImg.crand

def grand():
  return _CImg.grand()
grand = _CImg.grand

def prand(*args):
  return _CImg.prand(*args)
prand = _CImg.prand

def _pythagore(*args):
  return _CImg._pythagore(*args)
_pythagore = _CImg._pythagore

def uncase(*args):
  return _CImg.uncase(*args)
uncase = _CImg.uncase

def atof(*args):
  return _CImg.atof(*args)
atof = _CImg.atof

def strncasecmp(*args):
  return _CImg.strncasecmp(*args)
strncasecmp = _CImg.strncasecmp

def strcasecmp(*args):
  return _CImg.strcasecmp(*args)
strcasecmp = _CImg.strcasecmp

def strpare(*args):
  return _CImg.strpare(*args)
strpare = _CImg.strpare

def strescape(*args):
  return _CImg.strescape(*args)
strescape = _CImg.strescape

def strbuffersize(*args):
  return _CImg.strbuffersize(*args)
strbuffersize = _CImg.strbuffersize

def basename(*args):
  return _CImg.basename(*args)
basename = _CImg.basename

def filenamerand():
  return _CImg.filenamerand()
filenamerand = _CImg.filenamerand

def winformat_string(*args):
  return _CImg.winformat_string(*args)
winformat_string = _CImg.winformat_string

def fopen(*args):
  return _CImg.fopen(*args)
fopen = _CImg.fopen

def fclose(*args):
  return _CImg.fclose(*args)
fclose = _CImg.fclose

def temporary_path(user_path=None, reinit_path=False):
  return _CImg.temporary_path(user_path, reinit_path)
temporary_path = _CImg.temporary_path

def imagemagick_path(user_path=None, reinit_path=False):
  return _CImg.imagemagick_path(user_path, reinit_path)
imagemagick_path = _CImg.imagemagick_path

def graphicsmagick_path(user_path=None, reinit_path=False):
  return _CImg.graphicsmagick_path(user_path, reinit_path)
graphicsmagick_path = _CImg.graphicsmagick_path

def medcon_path(user_path=None, reinit_path=False):
  return _CImg.medcon_path(user_path, reinit_path)
medcon_path = _CImg.medcon_path

def ffmpeg_path(user_path=None, reinit_path=False):
  return _CImg.ffmpeg_path(user_path, reinit_path)
ffmpeg_path = _CImg.ffmpeg_path

def gzip_path(user_path=None, reinit_path=False):
  return _CImg.gzip_path(user_path, reinit_path)
gzip_path = _CImg.gzip_path

def gunzip_path(user_path=None, reinit_path=False):
  return _CImg.gunzip_path(user_path, reinit_path)
gunzip_path = _CImg.gunzip_path

def dcraw_path(user_path=None, reinit_path=False):
  return _CImg.dcraw_path(user_path, reinit_path)
dcraw_path = _CImg.dcraw_path

def wget_path(user_path=None, reinit_path=False):
  return _CImg.wget_path(user_path, reinit_path)
wget_path = _CImg.wget_path

def curl_path(user_path=None, reinit_path=False):
  return _CImg.curl_path(user_path, reinit_path)
curl_path = _CImg.curl_path

def split_filename(*args):
  return _CImg.split_filename(*args)
split_filename = _CImg.split_filename

def number_filename(*args):
  return _CImg.number_filename(*args)
number_filename = _CImg.number_filename

def file_type(*args):
  return _CImg.file_type(*args)
file_type = _CImg.file_type

def load_network_external(*args):
  return _CImg.load_network_external(*args)
load_network_external = _CImg.load_network_external

def option(*args):
  return _CImg.option(*args)
option = _CImg.option

def argument(*args):
  return _CImg.argument(*args)
argument = _CImg.argument
class CImgDisplay(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CImgDisplay, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CImgDisplay, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_width"] = _CImg.CImgDisplay__width_set
    __swig_getmethods__["_width"] = _CImg.CImgDisplay__width_get
    if _newclass:_width = _swig_property(_CImg.CImgDisplay__width_get, _CImg.CImgDisplay__width_set)
    __swig_setmethods__["_height"] = _CImg.CImgDisplay__height_set
    __swig_getmethods__["_height"] = _CImg.CImgDisplay__height_get
    if _newclass:_height = _swig_property(_CImg.CImgDisplay__height_get, _CImg.CImgDisplay__height_set)
    __swig_setmethods__["_window_width"] = _CImg.CImgDisplay__window_width_set
    __swig_getmethods__["_window_width"] = _CImg.CImgDisplay__window_width_get
    if _newclass:_window_width = _swig_property(_CImg.CImgDisplay__window_width_get, _CImg.CImgDisplay__window_width_set)
    __swig_setmethods__["_window_height"] = _CImg.CImgDisplay__window_height_set
    __swig_getmethods__["_window_height"] = _CImg.CImgDisplay__window_height_get
    if _newclass:_window_height = _swig_property(_CImg.CImgDisplay__window_height_get, _CImg.CImgDisplay__window_height_set)
    __swig_setmethods__["_window_x"] = _CImg.CImgDisplay__window_x_set
    __swig_getmethods__["_window_x"] = _CImg.CImgDisplay__window_x_get
    if _newclass:_window_x = _swig_property(_CImg.CImgDisplay__window_x_get, _CImg.CImgDisplay__window_x_set)
    __swig_setmethods__["_window_y"] = _CImg.CImgDisplay__window_y_set
    __swig_getmethods__["_window_y"] = _CImg.CImgDisplay__window_y_get
    if _newclass:_window_y = _swig_property(_CImg.CImgDisplay__window_y_get, _CImg.CImgDisplay__window_y_set)
    __swig_setmethods__["_mouse_x"] = _CImg.CImgDisplay__mouse_x_set
    __swig_getmethods__["_mouse_x"] = _CImg.CImgDisplay__mouse_x_get
    if _newclass:_mouse_x = _swig_property(_CImg.CImgDisplay__mouse_x_get, _CImg.CImgDisplay__mouse_x_set)
    __swig_setmethods__["_mouse_y"] = _CImg.CImgDisplay__mouse_y_set
    __swig_getmethods__["_mouse_y"] = _CImg.CImgDisplay__mouse_y_get
    if _newclass:_mouse_y = _swig_property(_CImg.CImgDisplay__mouse_y_get, _CImg.CImgDisplay__mouse_y_set)
    __swig_setmethods__["_normalization"] = _CImg.CImgDisplay__normalization_set
    __swig_getmethods__["_normalization"] = _CImg.CImgDisplay__normalization_get
    if _newclass:_normalization = _swig_property(_CImg.CImgDisplay__normalization_get, _CImg.CImgDisplay__normalization_set)
    __swig_setmethods__["_title"] = _CImg.CImgDisplay__title_set
    __swig_getmethods__["_title"] = _CImg.CImgDisplay__title_get
    if _newclass:_title = _swig_property(_CImg.CImgDisplay__title_get, _CImg.CImgDisplay__title_set)
    __swig_setmethods__["_button"] = _CImg.CImgDisplay__button_set
    __swig_getmethods__["_button"] = _CImg.CImgDisplay__button_get
    if _newclass:_button = _swig_property(_CImg.CImgDisplay__button_get, _CImg.CImgDisplay__button_set)
    __swig_setmethods__["_wheel"] = _CImg.CImgDisplay__wheel_set
    __swig_getmethods__["_wheel"] = _CImg.CImgDisplay__wheel_get
    if _newclass:_wheel = _swig_property(_CImg.CImgDisplay__wheel_get, _CImg.CImgDisplay__wheel_set)
    __swig_setmethods__["_keys"] = _CImg.CImgDisplay__keys_set
    __swig_getmethods__["_keys"] = _CImg.CImgDisplay__keys_get
    if _newclass:_keys = _swig_property(_CImg.CImgDisplay__keys_get, _CImg.CImgDisplay__keys_set)
    __swig_setmethods__["_released_keys"] = _CImg.CImgDisplay__released_keys_set
    __swig_getmethods__["_released_keys"] = _CImg.CImgDisplay__released_keys_get
    if _newclass:_released_keys = _swig_property(_CImg.CImgDisplay__released_keys_get, _CImg.CImgDisplay__released_keys_set)
    __swig_setmethods__["_is_closed"] = _CImg.CImgDisplay__is_closed_set
    __swig_getmethods__["_is_closed"] = _CImg.CImgDisplay__is_closed_get
    if _newclass:_is_closed = _swig_property(_CImg.CImgDisplay__is_closed_get, _CImg.CImgDisplay__is_closed_set)
    __swig_setmethods__["_is_resized"] = _CImg.CImgDisplay__is_resized_set
    __swig_getmethods__["_is_resized"] = _CImg.CImgDisplay__is_resized_get
    if _newclass:_is_resized = _swig_property(_CImg.CImgDisplay__is_resized_get, _CImg.CImgDisplay__is_resized_set)
    __swig_setmethods__["_is_moved"] = _CImg.CImgDisplay__is_moved_set
    __swig_getmethods__["_is_moved"] = _CImg.CImgDisplay__is_moved_get
    if _newclass:_is_moved = _swig_property(_CImg.CImgDisplay__is_moved_get, _CImg.CImgDisplay__is_moved_set)
    __swig_setmethods__["_is_event"] = _CImg.CImgDisplay__is_event_set
    __swig_getmethods__["_is_event"] = _CImg.CImgDisplay__is_event_get
    if _newclass:_is_event = _swig_property(_CImg.CImgDisplay__is_event_get, _CImg.CImgDisplay__is_event_set)
    __swig_setmethods__["_is_keyESC"] = _CImg.CImgDisplay__is_keyESC_set
    __swig_getmethods__["_is_keyESC"] = _CImg.CImgDisplay__is_keyESC_get
    if _newclass:_is_keyESC = _swig_property(_CImg.CImgDisplay__is_keyESC_get, _CImg.CImgDisplay__is_keyESC_set)
    __swig_setmethods__["_is_keyF1"] = _CImg.CImgDisplay__is_keyF1_set
    __swig_getmethods__["_is_keyF1"] = _CImg.CImgDisplay__is_keyF1_get
    if _newclass:_is_keyF1 = _swig_property(_CImg.CImgDisplay__is_keyF1_get, _CImg.CImgDisplay__is_keyF1_set)
    __swig_setmethods__["_is_keyF2"] = _CImg.CImgDisplay__is_keyF2_set
    __swig_getmethods__["_is_keyF2"] = _CImg.CImgDisplay__is_keyF2_get
    if _newclass:_is_keyF2 = _swig_property(_CImg.CImgDisplay__is_keyF2_get, _CImg.CImgDisplay__is_keyF2_set)
    __swig_setmethods__["_is_keyF3"] = _CImg.CImgDisplay__is_keyF3_set
    __swig_getmethods__["_is_keyF3"] = _CImg.CImgDisplay__is_keyF3_get
    if _newclass:_is_keyF3 = _swig_property(_CImg.CImgDisplay__is_keyF3_get, _CImg.CImgDisplay__is_keyF3_set)
    __swig_setmethods__["_is_keyF4"] = _CImg.CImgDisplay__is_keyF4_set
    __swig_getmethods__["_is_keyF4"] = _CImg.CImgDisplay__is_keyF4_get
    if _newclass:_is_keyF4 = _swig_property(_CImg.CImgDisplay__is_keyF4_get, _CImg.CImgDisplay__is_keyF4_set)
    __swig_setmethods__["_is_keyF5"] = _CImg.CImgDisplay__is_keyF5_set
    __swig_getmethods__["_is_keyF5"] = _CImg.CImgDisplay__is_keyF5_get
    if _newclass:_is_keyF5 = _swig_property(_CImg.CImgDisplay__is_keyF5_get, _CImg.CImgDisplay__is_keyF5_set)
    __swig_setmethods__["_is_keyF6"] = _CImg.CImgDisplay__is_keyF6_set
    __swig_getmethods__["_is_keyF6"] = _CImg.CImgDisplay__is_keyF6_get
    if _newclass:_is_keyF6 = _swig_property(_CImg.CImgDisplay__is_keyF6_get, _CImg.CImgDisplay__is_keyF6_set)
    __swig_setmethods__["_is_keyF7"] = _CImg.CImgDisplay__is_keyF7_set
    __swig_getmethods__["_is_keyF7"] = _CImg.CImgDisplay__is_keyF7_get
    if _newclass:_is_keyF7 = _swig_property(_CImg.CImgDisplay__is_keyF7_get, _CImg.CImgDisplay__is_keyF7_set)
    __swig_setmethods__["_is_keyF8"] = _CImg.CImgDisplay__is_keyF8_set
    __swig_getmethods__["_is_keyF8"] = _CImg.CImgDisplay__is_keyF8_get
    if _newclass:_is_keyF8 = _swig_property(_CImg.CImgDisplay__is_keyF8_get, _CImg.CImgDisplay__is_keyF8_set)
    __swig_setmethods__["_is_keyF9"] = _CImg.CImgDisplay__is_keyF9_set
    __swig_getmethods__["_is_keyF9"] = _CImg.CImgDisplay__is_keyF9_get
    if _newclass:_is_keyF9 = _swig_property(_CImg.CImgDisplay__is_keyF9_get, _CImg.CImgDisplay__is_keyF9_set)
    __swig_setmethods__["_is_keyF10"] = _CImg.CImgDisplay__is_keyF10_set
    __swig_getmethods__["_is_keyF10"] = _CImg.CImgDisplay__is_keyF10_get
    if _newclass:_is_keyF10 = _swig_property(_CImg.CImgDisplay__is_keyF10_get, _CImg.CImgDisplay__is_keyF10_set)
    __swig_setmethods__["_is_keyF11"] = _CImg.CImgDisplay__is_keyF11_set
    __swig_getmethods__["_is_keyF11"] = _CImg.CImgDisplay__is_keyF11_get
    if _newclass:_is_keyF11 = _swig_property(_CImg.CImgDisplay__is_keyF11_get, _CImg.CImgDisplay__is_keyF11_set)
    __swig_setmethods__["_is_keyF12"] = _CImg.CImgDisplay__is_keyF12_set
    __swig_getmethods__["_is_keyF12"] = _CImg.CImgDisplay__is_keyF12_get
    if _newclass:_is_keyF12 = _swig_property(_CImg.CImgDisplay__is_keyF12_get, _CImg.CImgDisplay__is_keyF12_set)
    __swig_setmethods__["_is_keyPAUSE"] = _CImg.CImgDisplay__is_keyPAUSE_set
    __swig_getmethods__["_is_keyPAUSE"] = _CImg.CImgDisplay__is_keyPAUSE_get
    if _newclass:_is_keyPAUSE = _swig_property(_CImg.CImgDisplay__is_keyPAUSE_get, _CImg.CImgDisplay__is_keyPAUSE_set)
    __swig_setmethods__["_is_key1"] = _CImg.CImgDisplay__is_key1_set
    __swig_getmethods__["_is_key1"] = _CImg.CImgDisplay__is_key1_get
    if _newclass:_is_key1 = _swig_property(_CImg.CImgDisplay__is_key1_get, _CImg.CImgDisplay__is_key1_set)
    __swig_setmethods__["_is_key2"] = _CImg.CImgDisplay__is_key2_set
    __swig_getmethods__["_is_key2"] = _CImg.CImgDisplay__is_key2_get
    if _newclass:_is_key2 = _swig_property(_CImg.CImgDisplay__is_key2_get, _CImg.CImgDisplay__is_key2_set)
    __swig_setmethods__["_is_key3"] = _CImg.CImgDisplay__is_key3_set
    __swig_getmethods__["_is_key3"] = _CImg.CImgDisplay__is_key3_get
    if _newclass:_is_key3 = _swig_property(_CImg.CImgDisplay__is_key3_get, _CImg.CImgDisplay__is_key3_set)
    __swig_setmethods__["_is_key4"] = _CImg.CImgDisplay__is_key4_set
    __swig_getmethods__["_is_key4"] = _CImg.CImgDisplay__is_key4_get
    if _newclass:_is_key4 = _swig_property(_CImg.CImgDisplay__is_key4_get, _CImg.CImgDisplay__is_key4_set)
    __swig_setmethods__["_is_key5"] = _CImg.CImgDisplay__is_key5_set
    __swig_getmethods__["_is_key5"] = _CImg.CImgDisplay__is_key5_get
    if _newclass:_is_key5 = _swig_property(_CImg.CImgDisplay__is_key5_get, _CImg.CImgDisplay__is_key5_set)
    __swig_setmethods__["_is_key6"] = _CImg.CImgDisplay__is_key6_set
    __swig_getmethods__["_is_key6"] = _CImg.CImgDisplay__is_key6_get
    if _newclass:_is_key6 = _swig_property(_CImg.CImgDisplay__is_key6_get, _CImg.CImgDisplay__is_key6_set)
    __swig_setmethods__["_is_key7"] = _CImg.CImgDisplay__is_key7_set
    __swig_getmethods__["_is_key7"] = _CImg.CImgDisplay__is_key7_get
    if _newclass:_is_key7 = _swig_property(_CImg.CImgDisplay__is_key7_get, _CImg.CImgDisplay__is_key7_set)
    __swig_setmethods__["_is_key8"] = _CImg.CImgDisplay__is_key8_set
    __swig_getmethods__["_is_key8"] = _CImg.CImgDisplay__is_key8_get
    if _newclass:_is_key8 = _swig_property(_CImg.CImgDisplay__is_key8_get, _CImg.CImgDisplay__is_key8_set)
    __swig_setmethods__["_is_key9"] = _CImg.CImgDisplay__is_key9_set
    __swig_getmethods__["_is_key9"] = _CImg.CImgDisplay__is_key9_get
    if _newclass:_is_key9 = _swig_property(_CImg.CImgDisplay__is_key9_get, _CImg.CImgDisplay__is_key9_set)
    __swig_setmethods__["_is_key0"] = _CImg.CImgDisplay__is_key0_set
    __swig_getmethods__["_is_key0"] = _CImg.CImgDisplay__is_key0_get
    if _newclass:_is_key0 = _swig_property(_CImg.CImgDisplay__is_key0_get, _CImg.CImgDisplay__is_key0_set)
    __swig_setmethods__["_is_keyBACKSPACE"] = _CImg.CImgDisplay__is_keyBACKSPACE_set
    __swig_getmethods__["_is_keyBACKSPACE"] = _CImg.CImgDisplay__is_keyBACKSPACE_get
    if _newclass:_is_keyBACKSPACE = _swig_property(_CImg.CImgDisplay__is_keyBACKSPACE_get, _CImg.CImgDisplay__is_keyBACKSPACE_set)
    __swig_setmethods__["_is_keyINSERT"] = _CImg.CImgDisplay__is_keyINSERT_set
    __swig_getmethods__["_is_keyINSERT"] = _CImg.CImgDisplay__is_keyINSERT_get
    if _newclass:_is_keyINSERT = _swig_property(_CImg.CImgDisplay__is_keyINSERT_get, _CImg.CImgDisplay__is_keyINSERT_set)
    __swig_setmethods__["_is_keyHOME"] = _CImg.CImgDisplay__is_keyHOME_set
    __swig_getmethods__["_is_keyHOME"] = _CImg.CImgDisplay__is_keyHOME_get
    if _newclass:_is_keyHOME = _swig_property(_CImg.CImgDisplay__is_keyHOME_get, _CImg.CImgDisplay__is_keyHOME_set)
    __swig_setmethods__["_is_keyPAGEUP"] = _CImg.CImgDisplay__is_keyPAGEUP_set
    __swig_getmethods__["_is_keyPAGEUP"] = _CImg.CImgDisplay__is_keyPAGEUP_get
    if _newclass:_is_keyPAGEUP = _swig_property(_CImg.CImgDisplay__is_keyPAGEUP_get, _CImg.CImgDisplay__is_keyPAGEUP_set)
    __swig_setmethods__["_is_keyTAB"] = _CImg.CImgDisplay__is_keyTAB_set
    __swig_getmethods__["_is_keyTAB"] = _CImg.CImgDisplay__is_keyTAB_get
    if _newclass:_is_keyTAB = _swig_property(_CImg.CImgDisplay__is_keyTAB_get, _CImg.CImgDisplay__is_keyTAB_set)
    __swig_setmethods__["_is_keyQ"] = _CImg.CImgDisplay__is_keyQ_set
    __swig_getmethods__["_is_keyQ"] = _CImg.CImgDisplay__is_keyQ_get
    if _newclass:_is_keyQ = _swig_property(_CImg.CImgDisplay__is_keyQ_get, _CImg.CImgDisplay__is_keyQ_set)
    __swig_setmethods__["_is_keyW"] = _CImg.CImgDisplay__is_keyW_set
    __swig_getmethods__["_is_keyW"] = _CImg.CImgDisplay__is_keyW_get
    if _newclass:_is_keyW = _swig_property(_CImg.CImgDisplay__is_keyW_get, _CImg.CImgDisplay__is_keyW_set)
    __swig_setmethods__["_is_keyE"] = _CImg.CImgDisplay__is_keyE_set
    __swig_getmethods__["_is_keyE"] = _CImg.CImgDisplay__is_keyE_get
    if _newclass:_is_keyE = _swig_property(_CImg.CImgDisplay__is_keyE_get, _CImg.CImgDisplay__is_keyE_set)
    __swig_setmethods__["_is_keyR"] = _CImg.CImgDisplay__is_keyR_set
    __swig_getmethods__["_is_keyR"] = _CImg.CImgDisplay__is_keyR_get
    if _newclass:_is_keyR = _swig_property(_CImg.CImgDisplay__is_keyR_get, _CImg.CImgDisplay__is_keyR_set)
    __swig_setmethods__["_is_keyT"] = _CImg.CImgDisplay__is_keyT_set
    __swig_getmethods__["_is_keyT"] = _CImg.CImgDisplay__is_keyT_get
    if _newclass:_is_keyT = _swig_property(_CImg.CImgDisplay__is_keyT_get, _CImg.CImgDisplay__is_keyT_set)
    __swig_setmethods__["_is_keyY"] = _CImg.CImgDisplay__is_keyY_set
    __swig_getmethods__["_is_keyY"] = _CImg.CImgDisplay__is_keyY_get
    if _newclass:_is_keyY = _swig_property(_CImg.CImgDisplay__is_keyY_get, _CImg.CImgDisplay__is_keyY_set)
    __swig_setmethods__["_is_keyU"] = _CImg.CImgDisplay__is_keyU_set
    __swig_getmethods__["_is_keyU"] = _CImg.CImgDisplay__is_keyU_get
    if _newclass:_is_keyU = _swig_property(_CImg.CImgDisplay__is_keyU_get, _CImg.CImgDisplay__is_keyU_set)
    __swig_setmethods__["_is_keyI"] = _CImg.CImgDisplay__is_keyI_set
    __swig_getmethods__["_is_keyI"] = _CImg.CImgDisplay__is_keyI_get
    if _newclass:_is_keyI = _swig_property(_CImg.CImgDisplay__is_keyI_get, _CImg.CImgDisplay__is_keyI_set)
    __swig_setmethods__["_is_keyO"] = _CImg.CImgDisplay__is_keyO_set
    __swig_getmethods__["_is_keyO"] = _CImg.CImgDisplay__is_keyO_get
    if _newclass:_is_keyO = _swig_property(_CImg.CImgDisplay__is_keyO_get, _CImg.CImgDisplay__is_keyO_set)
    __swig_setmethods__["_is_keyP"] = _CImg.CImgDisplay__is_keyP_set
    __swig_getmethods__["_is_keyP"] = _CImg.CImgDisplay__is_keyP_get
    if _newclass:_is_keyP = _swig_property(_CImg.CImgDisplay__is_keyP_get, _CImg.CImgDisplay__is_keyP_set)
    __swig_setmethods__["_is_keyDELETE"] = _CImg.CImgDisplay__is_keyDELETE_set
    __swig_getmethods__["_is_keyDELETE"] = _CImg.CImgDisplay__is_keyDELETE_get
    if _newclass:_is_keyDELETE = _swig_property(_CImg.CImgDisplay__is_keyDELETE_get, _CImg.CImgDisplay__is_keyDELETE_set)
    __swig_setmethods__["_is_keyEND"] = _CImg.CImgDisplay__is_keyEND_set
    __swig_getmethods__["_is_keyEND"] = _CImg.CImgDisplay__is_keyEND_get
    if _newclass:_is_keyEND = _swig_property(_CImg.CImgDisplay__is_keyEND_get, _CImg.CImgDisplay__is_keyEND_set)
    __swig_setmethods__["_is_keyPAGEDOWN"] = _CImg.CImgDisplay__is_keyPAGEDOWN_set
    __swig_getmethods__["_is_keyPAGEDOWN"] = _CImg.CImgDisplay__is_keyPAGEDOWN_get
    if _newclass:_is_keyPAGEDOWN = _swig_property(_CImg.CImgDisplay__is_keyPAGEDOWN_get, _CImg.CImgDisplay__is_keyPAGEDOWN_set)
    __swig_setmethods__["_is_keyCAPSLOCK"] = _CImg.CImgDisplay__is_keyCAPSLOCK_set
    __swig_getmethods__["_is_keyCAPSLOCK"] = _CImg.CImgDisplay__is_keyCAPSLOCK_get
    if _newclass:_is_keyCAPSLOCK = _swig_property(_CImg.CImgDisplay__is_keyCAPSLOCK_get, _CImg.CImgDisplay__is_keyCAPSLOCK_set)
    __swig_setmethods__["_is_keyA"] = _CImg.CImgDisplay__is_keyA_set
    __swig_getmethods__["_is_keyA"] = _CImg.CImgDisplay__is_keyA_get
    if _newclass:_is_keyA = _swig_property(_CImg.CImgDisplay__is_keyA_get, _CImg.CImgDisplay__is_keyA_set)
    __swig_setmethods__["_is_keyS"] = _CImg.CImgDisplay__is_keyS_set
    __swig_getmethods__["_is_keyS"] = _CImg.CImgDisplay__is_keyS_get
    if _newclass:_is_keyS = _swig_property(_CImg.CImgDisplay__is_keyS_get, _CImg.CImgDisplay__is_keyS_set)
    __swig_setmethods__["_is_keyD"] = _CImg.CImgDisplay__is_keyD_set
    __swig_getmethods__["_is_keyD"] = _CImg.CImgDisplay__is_keyD_get
    if _newclass:_is_keyD = _swig_property(_CImg.CImgDisplay__is_keyD_get, _CImg.CImgDisplay__is_keyD_set)
    __swig_setmethods__["_is_keyF"] = _CImg.CImgDisplay__is_keyF_set
    __swig_getmethods__["_is_keyF"] = _CImg.CImgDisplay__is_keyF_get
    if _newclass:_is_keyF = _swig_property(_CImg.CImgDisplay__is_keyF_get, _CImg.CImgDisplay__is_keyF_set)
    __swig_setmethods__["_is_keyG"] = _CImg.CImgDisplay__is_keyG_set
    __swig_getmethods__["_is_keyG"] = _CImg.CImgDisplay__is_keyG_get
    if _newclass:_is_keyG = _swig_property(_CImg.CImgDisplay__is_keyG_get, _CImg.CImgDisplay__is_keyG_set)
    __swig_setmethods__["_is_keyH"] = _CImg.CImgDisplay__is_keyH_set
    __swig_getmethods__["_is_keyH"] = _CImg.CImgDisplay__is_keyH_get
    if _newclass:_is_keyH = _swig_property(_CImg.CImgDisplay__is_keyH_get, _CImg.CImgDisplay__is_keyH_set)
    __swig_setmethods__["_is_keyJ"] = _CImg.CImgDisplay__is_keyJ_set
    __swig_getmethods__["_is_keyJ"] = _CImg.CImgDisplay__is_keyJ_get
    if _newclass:_is_keyJ = _swig_property(_CImg.CImgDisplay__is_keyJ_get, _CImg.CImgDisplay__is_keyJ_set)
    __swig_setmethods__["_is_keyK"] = _CImg.CImgDisplay__is_keyK_set
    __swig_getmethods__["_is_keyK"] = _CImg.CImgDisplay__is_keyK_get
    if _newclass:_is_keyK = _swig_property(_CImg.CImgDisplay__is_keyK_get, _CImg.CImgDisplay__is_keyK_set)
    __swig_setmethods__["_is_keyL"] = _CImg.CImgDisplay__is_keyL_set
    __swig_getmethods__["_is_keyL"] = _CImg.CImgDisplay__is_keyL_get
    if _newclass:_is_keyL = _swig_property(_CImg.CImgDisplay__is_keyL_get, _CImg.CImgDisplay__is_keyL_set)
    __swig_setmethods__["_is_keyENTER"] = _CImg.CImgDisplay__is_keyENTER_set
    __swig_getmethods__["_is_keyENTER"] = _CImg.CImgDisplay__is_keyENTER_get
    if _newclass:_is_keyENTER = _swig_property(_CImg.CImgDisplay__is_keyENTER_get, _CImg.CImgDisplay__is_keyENTER_set)
    __swig_setmethods__["_is_keySHIFTLEFT"] = _CImg.CImgDisplay__is_keySHIFTLEFT_set
    __swig_getmethods__["_is_keySHIFTLEFT"] = _CImg.CImgDisplay__is_keySHIFTLEFT_get
    if _newclass:_is_keySHIFTLEFT = _swig_property(_CImg.CImgDisplay__is_keySHIFTLEFT_get, _CImg.CImgDisplay__is_keySHIFTLEFT_set)
    __swig_setmethods__["_is_keyZ"] = _CImg.CImgDisplay__is_keyZ_set
    __swig_getmethods__["_is_keyZ"] = _CImg.CImgDisplay__is_keyZ_get
    if _newclass:_is_keyZ = _swig_property(_CImg.CImgDisplay__is_keyZ_get, _CImg.CImgDisplay__is_keyZ_set)
    __swig_setmethods__["_is_keyX"] = _CImg.CImgDisplay__is_keyX_set
    __swig_getmethods__["_is_keyX"] = _CImg.CImgDisplay__is_keyX_get
    if _newclass:_is_keyX = _swig_property(_CImg.CImgDisplay__is_keyX_get, _CImg.CImgDisplay__is_keyX_set)
    __swig_setmethods__["_is_keyC"] = _CImg.CImgDisplay__is_keyC_set
    __swig_getmethods__["_is_keyC"] = _CImg.CImgDisplay__is_keyC_get
    if _newclass:_is_keyC = _swig_property(_CImg.CImgDisplay__is_keyC_get, _CImg.CImgDisplay__is_keyC_set)
    __swig_setmethods__["_is_keyV"] = _CImg.CImgDisplay__is_keyV_set
    __swig_getmethods__["_is_keyV"] = _CImg.CImgDisplay__is_keyV_get
    if _newclass:_is_keyV = _swig_property(_CImg.CImgDisplay__is_keyV_get, _CImg.CImgDisplay__is_keyV_set)
    __swig_setmethods__["_is_keyB"] = _CImg.CImgDisplay__is_keyB_set
    __swig_getmethods__["_is_keyB"] = _CImg.CImgDisplay__is_keyB_get
    if _newclass:_is_keyB = _swig_property(_CImg.CImgDisplay__is_keyB_get, _CImg.CImgDisplay__is_keyB_set)
    __swig_setmethods__["_is_keyN"] = _CImg.CImgDisplay__is_keyN_set
    __swig_getmethods__["_is_keyN"] = _CImg.CImgDisplay__is_keyN_get
    if _newclass:_is_keyN = _swig_property(_CImg.CImgDisplay__is_keyN_get, _CImg.CImgDisplay__is_keyN_set)
    __swig_setmethods__["_is_keyM"] = _CImg.CImgDisplay__is_keyM_set
    __swig_getmethods__["_is_keyM"] = _CImg.CImgDisplay__is_keyM_get
    if _newclass:_is_keyM = _swig_property(_CImg.CImgDisplay__is_keyM_get, _CImg.CImgDisplay__is_keyM_set)
    __swig_setmethods__["_is_keySHIFTRIGHT"] = _CImg.CImgDisplay__is_keySHIFTRIGHT_set
    __swig_getmethods__["_is_keySHIFTRIGHT"] = _CImg.CImgDisplay__is_keySHIFTRIGHT_get
    if _newclass:_is_keySHIFTRIGHT = _swig_property(_CImg.CImgDisplay__is_keySHIFTRIGHT_get, _CImg.CImgDisplay__is_keySHIFTRIGHT_set)
    __swig_setmethods__["_is_keyARROWUP"] = _CImg.CImgDisplay__is_keyARROWUP_set
    __swig_getmethods__["_is_keyARROWUP"] = _CImg.CImgDisplay__is_keyARROWUP_get
    if _newclass:_is_keyARROWUP = _swig_property(_CImg.CImgDisplay__is_keyARROWUP_get, _CImg.CImgDisplay__is_keyARROWUP_set)
    __swig_setmethods__["_is_keyCTRLLEFT"] = _CImg.CImgDisplay__is_keyCTRLLEFT_set
    __swig_getmethods__["_is_keyCTRLLEFT"] = _CImg.CImgDisplay__is_keyCTRLLEFT_get
    if _newclass:_is_keyCTRLLEFT = _swig_property(_CImg.CImgDisplay__is_keyCTRLLEFT_get, _CImg.CImgDisplay__is_keyCTRLLEFT_set)
    __swig_setmethods__["_is_keyAPPLEFT"] = _CImg.CImgDisplay__is_keyAPPLEFT_set
    __swig_getmethods__["_is_keyAPPLEFT"] = _CImg.CImgDisplay__is_keyAPPLEFT_get
    if _newclass:_is_keyAPPLEFT = _swig_property(_CImg.CImgDisplay__is_keyAPPLEFT_get, _CImg.CImgDisplay__is_keyAPPLEFT_set)
    __swig_setmethods__["_is_keyALT"] = _CImg.CImgDisplay__is_keyALT_set
    __swig_getmethods__["_is_keyALT"] = _CImg.CImgDisplay__is_keyALT_get
    if _newclass:_is_keyALT = _swig_property(_CImg.CImgDisplay__is_keyALT_get, _CImg.CImgDisplay__is_keyALT_set)
    __swig_setmethods__["_is_keySPACE"] = _CImg.CImgDisplay__is_keySPACE_set
    __swig_getmethods__["_is_keySPACE"] = _CImg.CImgDisplay__is_keySPACE_get
    if _newclass:_is_keySPACE = _swig_property(_CImg.CImgDisplay__is_keySPACE_get, _CImg.CImgDisplay__is_keySPACE_set)
    __swig_setmethods__["_is_keyALTGR"] = _CImg.CImgDisplay__is_keyALTGR_set
    __swig_getmethods__["_is_keyALTGR"] = _CImg.CImgDisplay__is_keyALTGR_get
    if _newclass:_is_keyALTGR = _swig_property(_CImg.CImgDisplay__is_keyALTGR_get, _CImg.CImgDisplay__is_keyALTGR_set)
    __swig_setmethods__["_is_keyAPPRIGHT"] = _CImg.CImgDisplay__is_keyAPPRIGHT_set
    __swig_getmethods__["_is_keyAPPRIGHT"] = _CImg.CImgDisplay__is_keyAPPRIGHT_get
    if _newclass:_is_keyAPPRIGHT = _swig_property(_CImg.CImgDisplay__is_keyAPPRIGHT_get, _CImg.CImgDisplay__is_keyAPPRIGHT_set)
    __swig_setmethods__["_is_keyMENU"] = _CImg.CImgDisplay__is_keyMENU_set
    __swig_getmethods__["_is_keyMENU"] = _CImg.CImgDisplay__is_keyMENU_get
    if _newclass:_is_keyMENU = _swig_property(_CImg.CImgDisplay__is_keyMENU_get, _CImg.CImgDisplay__is_keyMENU_set)
    __swig_setmethods__["_is_keyCTRLRIGHT"] = _CImg.CImgDisplay__is_keyCTRLRIGHT_set
    __swig_getmethods__["_is_keyCTRLRIGHT"] = _CImg.CImgDisplay__is_keyCTRLRIGHT_get
    if _newclass:_is_keyCTRLRIGHT = _swig_property(_CImg.CImgDisplay__is_keyCTRLRIGHT_get, _CImg.CImgDisplay__is_keyCTRLRIGHT_set)
    __swig_setmethods__["_is_keyARROWLEFT"] = _CImg.CImgDisplay__is_keyARROWLEFT_set
    __swig_getmethods__["_is_keyARROWLEFT"] = _CImg.CImgDisplay__is_keyARROWLEFT_get
    if _newclass:_is_keyARROWLEFT = _swig_property(_CImg.CImgDisplay__is_keyARROWLEFT_get, _CImg.CImgDisplay__is_keyARROWLEFT_set)
    __swig_setmethods__["_is_keyARROWDOWN"] = _CImg.CImgDisplay__is_keyARROWDOWN_set
    __swig_getmethods__["_is_keyARROWDOWN"] = _CImg.CImgDisplay__is_keyARROWDOWN_get
    if _newclass:_is_keyARROWDOWN = _swig_property(_CImg.CImgDisplay__is_keyARROWDOWN_get, _CImg.CImgDisplay__is_keyARROWDOWN_set)
    __swig_setmethods__["_is_keyARROWRIGHT"] = _CImg.CImgDisplay__is_keyARROWRIGHT_set
    __swig_getmethods__["_is_keyARROWRIGHT"] = _CImg.CImgDisplay__is_keyARROWRIGHT_get
    if _newclass:_is_keyARROWRIGHT = _swig_property(_CImg.CImgDisplay__is_keyARROWRIGHT_get, _CImg.CImgDisplay__is_keyARROWRIGHT_set)
    __swig_setmethods__["_is_keyPAD0"] = _CImg.CImgDisplay__is_keyPAD0_set
    __swig_getmethods__["_is_keyPAD0"] = _CImg.CImgDisplay__is_keyPAD0_get
    if _newclass:_is_keyPAD0 = _swig_property(_CImg.CImgDisplay__is_keyPAD0_get, _CImg.CImgDisplay__is_keyPAD0_set)
    __swig_setmethods__["_is_keyPAD1"] = _CImg.CImgDisplay__is_keyPAD1_set
    __swig_getmethods__["_is_keyPAD1"] = _CImg.CImgDisplay__is_keyPAD1_get
    if _newclass:_is_keyPAD1 = _swig_property(_CImg.CImgDisplay__is_keyPAD1_get, _CImg.CImgDisplay__is_keyPAD1_set)
    __swig_setmethods__["_is_keyPAD2"] = _CImg.CImgDisplay__is_keyPAD2_set
    __swig_getmethods__["_is_keyPAD2"] = _CImg.CImgDisplay__is_keyPAD2_get
    if _newclass:_is_keyPAD2 = _swig_property(_CImg.CImgDisplay__is_keyPAD2_get, _CImg.CImgDisplay__is_keyPAD2_set)
    __swig_setmethods__["_is_keyPAD3"] = _CImg.CImgDisplay__is_keyPAD3_set
    __swig_getmethods__["_is_keyPAD3"] = _CImg.CImgDisplay__is_keyPAD3_get
    if _newclass:_is_keyPAD3 = _swig_property(_CImg.CImgDisplay__is_keyPAD3_get, _CImg.CImgDisplay__is_keyPAD3_set)
    __swig_setmethods__["_is_keyPAD4"] = _CImg.CImgDisplay__is_keyPAD4_set
    __swig_getmethods__["_is_keyPAD4"] = _CImg.CImgDisplay__is_keyPAD4_get
    if _newclass:_is_keyPAD4 = _swig_property(_CImg.CImgDisplay__is_keyPAD4_get, _CImg.CImgDisplay__is_keyPAD4_set)
    __swig_setmethods__["_is_keyPAD5"] = _CImg.CImgDisplay__is_keyPAD5_set
    __swig_getmethods__["_is_keyPAD5"] = _CImg.CImgDisplay__is_keyPAD5_get
    if _newclass:_is_keyPAD5 = _swig_property(_CImg.CImgDisplay__is_keyPAD5_get, _CImg.CImgDisplay__is_keyPAD5_set)
    __swig_setmethods__["_is_keyPAD6"] = _CImg.CImgDisplay__is_keyPAD6_set
    __swig_getmethods__["_is_keyPAD6"] = _CImg.CImgDisplay__is_keyPAD6_get
    if _newclass:_is_keyPAD6 = _swig_property(_CImg.CImgDisplay__is_keyPAD6_get, _CImg.CImgDisplay__is_keyPAD6_set)
    __swig_setmethods__["_is_keyPAD7"] = _CImg.CImgDisplay__is_keyPAD7_set
    __swig_getmethods__["_is_keyPAD7"] = _CImg.CImgDisplay__is_keyPAD7_get
    if _newclass:_is_keyPAD7 = _swig_property(_CImg.CImgDisplay__is_keyPAD7_get, _CImg.CImgDisplay__is_keyPAD7_set)
    __swig_setmethods__["_is_keyPAD8"] = _CImg.CImgDisplay__is_keyPAD8_set
    __swig_getmethods__["_is_keyPAD8"] = _CImg.CImgDisplay__is_keyPAD8_get
    if _newclass:_is_keyPAD8 = _swig_property(_CImg.CImgDisplay__is_keyPAD8_get, _CImg.CImgDisplay__is_keyPAD8_set)
    __swig_setmethods__["_is_keyPAD9"] = _CImg.CImgDisplay__is_keyPAD9_set
    __swig_getmethods__["_is_keyPAD9"] = _CImg.CImgDisplay__is_keyPAD9_get
    if _newclass:_is_keyPAD9 = _swig_property(_CImg.CImgDisplay__is_keyPAD9_get, _CImg.CImgDisplay__is_keyPAD9_set)
    __swig_setmethods__["_is_keyPADADD"] = _CImg.CImgDisplay__is_keyPADADD_set
    __swig_getmethods__["_is_keyPADADD"] = _CImg.CImgDisplay__is_keyPADADD_get
    if _newclass:_is_keyPADADD = _swig_property(_CImg.CImgDisplay__is_keyPADADD_get, _CImg.CImgDisplay__is_keyPADADD_set)
    __swig_setmethods__["_is_keyPADSUB"] = _CImg.CImgDisplay__is_keyPADSUB_set
    __swig_getmethods__["_is_keyPADSUB"] = _CImg.CImgDisplay__is_keyPADSUB_get
    if _newclass:_is_keyPADSUB = _swig_property(_CImg.CImgDisplay__is_keyPADSUB_get, _CImg.CImgDisplay__is_keyPADSUB_set)
    __swig_setmethods__["_is_keyPADMUL"] = _CImg.CImgDisplay__is_keyPADMUL_set
    __swig_getmethods__["_is_keyPADMUL"] = _CImg.CImgDisplay__is_keyPADMUL_get
    if _newclass:_is_keyPADMUL = _swig_property(_CImg.CImgDisplay__is_keyPADMUL_get, _CImg.CImgDisplay__is_keyPADMUL_set)
    __swig_setmethods__["_is_keyPADDIV"] = _CImg.CImgDisplay__is_keyPADDIV_set
    __swig_getmethods__["_is_keyPADDIV"] = _CImg.CImgDisplay__is_keyPADDIV_get
    if _newclass:_is_keyPADDIV = _swig_property(_CImg.CImgDisplay__is_keyPADDIV_get, _CImg.CImgDisplay__is_keyPADDIV_set)
    __swig_setmethods__["_is_fullscreen"] = _CImg.CImgDisplay__is_fullscreen_set
    __swig_getmethods__["_is_fullscreen"] = _CImg.CImgDisplay__is_fullscreen_get
    if _newclass:_is_fullscreen = _swig_property(_CImg.CImgDisplay__is_fullscreen_get, _CImg.CImgDisplay__is_fullscreen_set)
    __swig_setmethods__["_fps_fps"] = _CImg.CImgDisplay__fps_fps_set
    __swig_getmethods__["_fps_fps"] = _CImg.CImgDisplay__fps_fps_get
    if _newclass:_fps_fps = _swig_property(_CImg.CImgDisplay__fps_fps_get, _CImg.CImgDisplay__fps_fps_set)
    __swig_setmethods__["_min"] = _CImg.CImgDisplay__min_set
    __swig_getmethods__["_min"] = _CImg.CImgDisplay__min_get
    if _newclass:_min = _swig_property(_CImg.CImgDisplay__min_get, _CImg.CImgDisplay__min_set)
    __swig_setmethods__["_max"] = _CImg.CImgDisplay__max_set
    __swig_getmethods__["_max"] = _CImg.CImgDisplay__max_get
    if _newclass:_max = _swig_property(_CImg.CImgDisplay__max_get, _CImg.CImgDisplay__max_set)
    __swig_setmethods__["_timer"] = _CImg.CImgDisplay__timer_set
    __swig_getmethods__["_timer"] = _CImg.CImgDisplay__timer_get
    if _newclass:_timer = _swig_property(_CImg.CImgDisplay__timer_get, _CImg.CImgDisplay__timer_set)
    __swig_setmethods__["_fps_frames"] = _CImg.CImgDisplay__fps_frames_set
    __swig_getmethods__["_fps_frames"] = _CImg.CImgDisplay__fps_frames_get
    if _newclass:_fps_frames = _swig_property(_CImg.CImgDisplay__fps_frames_get, _CImg.CImgDisplay__fps_frames_set)
    __swig_setmethods__["_fps_timer"] = _CImg.CImgDisplay__fps_timer_set
    __swig_getmethods__["_fps_timer"] = _CImg.CImgDisplay__fps_timer_get
    if _newclass:_fps_timer = _swig_property(_CImg.CImgDisplay__fps_timer_get, _CImg.CImgDisplay__fps_timer_set)
    __swig_destroy__ = _CImg.delete_CImgDisplay
    __del__ = lambda self : None;
    def __init__(self, *args): 
        this = _CImg.new_CImgDisplay(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_getmethods__["_no_display_exception"] = lambda x: _CImg.CImgDisplay__no_display_exception
    if _newclass:_no_display_exception = staticmethod(_CImg.CImgDisplay__no_display_exception)
    def assign(self, *args): return _CImg.CImgDisplay_assign(self, *args)
    __swig_getmethods__["empty"] = lambda x: _CImg.CImgDisplay_empty
    if _newclass:empty = staticmethod(_CImg.CImgDisplay_empty)
    __swig_getmethods__["_fitscreen"] = lambda x: _CImg.CImgDisplay__fitscreen
    if _newclass:_fitscreen = staticmethod(_CImg.CImgDisplay__fitscreen)
    def __nonzero__(self):
        return _CImg.CImgDisplay___nonzero__(self)
    __bool__ = __nonzero__


    def is_empty(self): return _CImg.CImgDisplay_is_empty(self)
    def is_closed(self): return _CImg.CImgDisplay_is_closed(self)
    def is_resized(self): return _CImg.CImgDisplay_is_resized(self)
    def is_moved(self): return _CImg.CImgDisplay_is_moved(self)
    def is_event(self): return _CImg.CImgDisplay_is_event(self)
    def is_fullscreen(self): return _CImg.CImgDisplay_is_fullscreen(self)
    def is_keyESC(self): return _CImg.CImgDisplay_is_keyESC(self)
    def is_keyF1(self): return _CImg.CImgDisplay_is_keyF1(self)
    def is_keyF2(self): return _CImg.CImgDisplay_is_keyF2(self)
    def is_keyF3(self): return _CImg.CImgDisplay_is_keyF3(self)
    def is_keyF4(self): return _CImg.CImgDisplay_is_keyF4(self)
    def is_keyF5(self): return _CImg.CImgDisplay_is_keyF5(self)
    def is_keyF6(self): return _CImg.CImgDisplay_is_keyF6(self)
    def is_keyF7(self): return _CImg.CImgDisplay_is_keyF7(self)
    def is_keyF8(self): return _CImg.CImgDisplay_is_keyF8(self)
    def is_keyF9(self): return _CImg.CImgDisplay_is_keyF9(self)
    def is_keyF10(self): return _CImg.CImgDisplay_is_keyF10(self)
    def is_keyF11(self): return _CImg.CImgDisplay_is_keyF11(self)
    def is_keyF12(self): return _CImg.CImgDisplay_is_keyF12(self)
    def is_keyPAUSE(self): return _CImg.CImgDisplay_is_keyPAUSE(self)
    def is_key1(self): return _CImg.CImgDisplay_is_key1(self)
    def is_key2(self): return _CImg.CImgDisplay_is_key2(self)
    def is_key3(self): return _CImg.CImgDisplay_is_key3(self)
    def is_key4(self): return _CImg.CImgDisplay_is_key4(self)
    def is_key5(self): return _CImg.CImgDisplay_is_key5(self)
    def is_key6(self): return _CImg.CImgDisplay_is_key6(self)
    def is_key7(self): return _CImg.CImgDisplay_is_key7(self)
    def is_key8(self): return _CImg.CImgDisplay_is_key8(self)
    def is_key9(self): return _CImg.CImgDisplay_is_key9(self)
    def is_key0(self): return _CImg.CImgDisplay_is_key0(self)
    def is_keyBACKSPACE(self): return _CImg.CImgDisplay_is_keyBACKSPACE(self)
    def is_keyINSERT(self): return _CImg.CImgDisplay_is_keyINSERT(self)
    def is_keyHOME(self): return _CImg.CImgDisplay_is_keyHOME(self)
    def is_keyPAGEUP(self): return _CImg.CImgDisplay_is_keyPAGEUP(self)
    def is_keyTAB(self): return _CImg.CImgDisplay_is_keyTAB(self)
    def is_keyQ(self): return _CImg.CImgDisplay_is_keyQ(self)
    def is_keyW(self): return _CImg.CImgDisplay_is_keyW(self)
    def is_keyE(self): return _CImg.CImgDisplay_is_keyE(self)
    def is_keyR(self): return _CImg.CImgDisplay_is_keyR(self)
    def is_keyT(self): return _CImg.CImgDisplay_is_keyT(self)
    def is_keyY(self): return _CImg.CImgDisplay_is_keyY(self)
    def is_keyU(self): return _CImg.CImgDisplay_is_keyU(self)
    def is_keyI(self): return _CImg.CImgDisplay_is_keyI(self)
    def is_keyO(self): return _CImg.CImgDisplay_is_keyO(self)
    def is_keyP(self): return _CImg.CImgDisplay_is_keyP(self)
    def is_keyDELETE(self): return _CImg.CImgDisplay_is_keyDELETE(self)
    def is_keyEND(self): return _CImg.CImgDisplay_is_keyEND(self)
    def is_keyPAGEDOWN(self): return _CImg.CImgDisplay_is_keyPAGEDOWN(self)
    def is_keyCAPSLOCK(self): return _CImg.CImgDisplay_is_keyCAPSLOCK(self)
    def is_keyA(self): return _CImg.CImgDisplay_is_keyA(self)
    def is_keyS(self): return _CImg.CImgDisplay_is_keyS(self)
    def is_keyD(self): return _CImg.CImgDisplay_is_keyD(self)
    def is_keyF(self): return _CImg.CImgDisplay_is_keyF(self)
    def is_keyG(self): return _CImg.CImgDisplay_is_keyG(self)
    def is_keyH(self): return _CImg.CImgDisplay_is_keyH(self)
    def is_keyJ(self): return _CImg.CImgDisplay_is_keyJ(self)
    def is_keyK(self): return _CImg.CImgDisplay_is_keyK(self)
    def is_keyL(self): return _CImg.CImgDisplay_is_keyL(self)
    def is_keyENTER(self): return _CImg.CImgDisplay_is_keyENTER(self)
    def is_keySHIFTLEFT(self): return _CImg.CImgDisplay_is_keySHIFTLEFT(self)
    def is_keyZ(self): return _CImg.CImgDisplay_is_keyZ(self)
    def is_keyX(self): return _CImg.CImgDisplay_is_keyX(self)
    def is_keyC(self): return _CImg.CImgDisplay_is_keyC(self)
    def is_keyV(self): return _CImg.CImgDisplay_is_keyV(self)
    def is_keyB(self): return _CImg.CImgDisplay_is_keyB(self)
    def is_keyN(self): return _CImg.CImgDisplay_is_keyN(self)
    def is_keyM(self): return _CImg.CImgDisplay_is_keyM(self)
    def is_keySHIFTRIGHT(self): return _CImg.CImgDisplay_is_keySHIFTRIGHT(self)
    def is_keyARROWUP(self): return _CImg.CImgDisplay_is_keyARROWUP(self)
    def is_keyCTRLLEFT(self): return _CImg.CImgDisplay_is_keyCTRLLEFT(self)
    def is_keyAPPLEFT(self): return _CImg.CImgDisplay_is_keyAPPLEFT(self)
    def is_keyALT(self): return _CImg.CImgDisplay_is_keyALT(self)
    def is_keySPACE(self): return _CImg.CImgDisplay_is_keySPACE(self)
    def is_keyALTGR(self): return _CImg.CImgDisplay_is_keyALTGR(self)
    def is_keyAPPRIGHT(self): return _CImg.CImgDisplay_is_keyAPPRIGHT(self)
    def is_keyMENU(self): return _CImg.CImgDisplay_is_keyMENU(self)
    def is_keyCTRLRIGHT(self): return _CImg.CImgDisplay_is_keyCTRLRIGHT(self)
    def is_keyARROWLEFT(self): return _CImg.CImgDisplay_is_keyARROWLEFT(self)
    def is_keyARROWDOWN(self): return _CImg.CImgDisplay_is_keyARROWDOWN(self)
    def is_keyARROWRIGHT(self): return _CImg.CImgDisplay_is_keyARROWRIGHT(self)
    def is_keyPAD0(self): return _CImg.CImgDisplay_is_keyPAD0(self)
    def is_keyPAD1(self): return _CImg.CImgDisplay_is_keyPAD1(self)
    def is_keyPAD2(self): return _CImg.CImgDisplay_is_keyPAD2(self)
    def is_keyPAD3(self): return _CImg.CImgDisplay_is_keyPAD3(self)
    def is_keyPAD4(self): return _CImg.CImgDisplay_is_keyPAD4(self)
    def is_keyPAD5(self): return _CImg.CImgDisplay_is_keyPAD5(self)
    def is_keyPAD6(self): return _CImg.CImgDisplay_is_keyPAD6(self)
    def is_keyPAD7(self): return _CImg.CImgDisplay_is_keyPAD7(self)
    def is_keyPAD8(self): return _CImg.CImgDisplay_is_keyPAD8(self)
    def is_keyPAD9(self): return _CImg.CImgDisplay_is_keyPAD9(self)
    def is_keyPADADD(self): return _CImg.CImgDisplay_is_keyPADADD(self)
    def is_keyPADSUB(self): return _CImg.CImgDisplay_is_keyPADSUB(self)
    def is_keyPADMUL(self): return _CImg.CImgDisplay_is_keyPADMUL(self)
    def is_keyPADDIV(self): return _CImg.CImgDisplay_is_keyPADDIV(self)
    def is_key(self, *args): return _CImg.CImgDisplay_is_key(self, *args)
    def is_key_sequence(self, *args): return _CImg.CImgDisplay_is_key_sequence(self, *args)
    def width(self): return _CImg.CImgDisplay_width(self)
    def height(self): return _CImg.CImgDisplay_height(self)
    def mouse_x(self): return _CImg.CImgDisplay_mouse_x(self)
    def mouse_y(self): return _CImg.CImgDisplay_mouse_y(self)
    def button(self): return _CImg.CImgDisplay_button(self)
    def wheel(self): return _CImg.CImgDisplay_wheel(self)
    def key(self, pos=0): return _CImg.CImgDisplay_key(self, pos)
    def released_key(self, pos=0): return _CImg.CImgDisplay_released_key(self, pos)
    __swig_getmethods__["keycode"] = lambda x: _CImg.CImgDisplay_keycode
    if _newclass:keycode = staticmethod(_CImg.CImgDisplay_keycode)
    def normalization(self): return _CImg.CImgDisplay_normalization(self)
    def title(self): return _CImg.CImgDisplay_title(self)
    def window_width(self): return _CImg.CImgDisplay_window_width(self)
    def window_height(self): return _CImg.CImgDisplay_window_height(self)
    def window_x(self): return _CImg.CImgDisplay_window_x(self)
    def window_y(self): return _CImg.CImgDisplay_window_y(self)
    __swig_getmethods__["screen_width"] = lambda x: _CImg.CImgDisplay_screen_width
    if _newclass:screen_width = staticmethod(_CImg.CImgDisplay_screen_width)
    __swig_getmethods__["screen_height"] = lambda x: _CImg.CImgDisplay_screen_height
    if _newclass:screen_height = staticmethod(_CImg.CImgDisplay_screen_height)
    def frames_per_second(self): return _CImg.CImgDisplay_frames_per_second(self)
    def resize(self, *args): return _CImg.CImgDisplay_resize(self, *args)
    def set_fullscreen(self, *args): return _CImg.CImgDisplay_set_fullscreen(self, *args)
    def toggle_fullscreen(self, force_redraw=True): return _CImg.CImgDisplay_toggle_fullscreen(self, force_redraw)
    def show(self): return _CImg.CImgDisplay_show(self)
    def close(self): return _CImg.CImgDisplay_close(self)
    def move(self, *args): return _CImg.CImgDisplay_move(self, *args)
    def show_mouse(self): return _CImg.CImgDisplay_show_mouse(self)
    def hide_mouse(self): return _CImg.CImgDisplay_hide_mouse(self)
    def set_mouse(self, *args): return _CImg.CImgDisplay_set_mouse(self, *args)
    def set_title(self, *args): return _CImg.CImgDisplay_set_title(self, *args)
    def paint(self): return _CImg.CImgDisplay_paint(self)
    def set_button(self, *args): return _CImg.CImgDisplay_set_button(self, *args)
    def set_wheel(self, *args): return _CImg.CImgDisplay_set_wheel(self, *args)
    def set_key(self, *args): return _CImg.CImgDisplay_set_key(self, *args)
    def flush(self): return _CImg.CImgDisplay_flush(self)
    __swig_getmethods__["wait"] = lambda x: _CImg.CImgDisplay_wait
    if _newclass:wait = staticmethod(_CImg.CImgDisplay_wait)
    __swig_getmethods__["wait_all"] = lambda x: _CImg.CImgDisplay_wait_all
    if _newclass:wait_all = staticmethod(_CImg.CImgDisplay_wait_all)
CImgDisplay_swigregister = _CImg.CImgDisplay_swigregister
CImgDisplay_swigregister(CImgDisplay)
keyESC = cvar.keyESC
keyF1 = cvar.keyF1
keyF2 = cvar.keyF2
keyF3 = cvar.keyF3
keyF4 = cvar.keyF4
keyF5 = cvar.keyF5
keyF6 = cvar.keyF6
keyF7 = cvar.keyF7
keyF8 = cvar.keyF8
keyF9 = cvar.keyF9
keyF10 = cvar.keyF10
keyF11 = cvar.keyF11
keyF12 = cvar.keyF12
keyPAUSE = cvar.keyPAUSE
key1 = cvar.key1
key2 = cvar.key2
key3 = cvar.key3
key4 = cvar.key4
key5 = cvar.key5
key6 = cvar.key6
key7 = cvar.key7
key8 = cvar.key8
key9 = cvar.key9
key0 = cvar.key0
keyBACKSPACE = cvar.keyBACKSPACE
keyINSERT = cvar.keyINSERT
keyHOME = cvar.keyHOME
keyPAGEUP = cvar.keyPAGEUP
keyTAB = cvar.keyTAB
keyQ = cvar.keyQ
keyW = cvar.keyW
keyE = cvar.keyE
keyR = cvar.keyR
keyT = cvar.keyT
keyY = cvar.keyY
keyU = cvar.keyU
keyI = cvar.keyI
keyO = cvar.keyO
keyP = cvar.keyP
keyDELETE = cvar.keyDELETE
keyEND = cvar.keyEND
keyPAGEDOWN = cvar.keyPAGEDOWN
keyCAPSLOCK = cvar.keyCAPSLOCK
keyA = cvar.keyA
keyS = cvar.keyS
keyD = cvar.keyD
keyF = cvar.keyF
keyG = cvar.keyG
keyH = cvar.keyH
keyJ = cvar.keyJ
keyK = cvar.keyK
keyL = cvar.keyL
keyENTER = cvar.keyENTER
keySHIFTLEFT = cvar.keySHIFTLEFT
keyZ = cvar.keyZ
keyX = cvar.keyX
keyC = cvar.keyC
keyV = cvar.keyV
keyB = cvar.keyB
keyN = cvar.keyN
keyM = cvar.keyM
keySHIFTRIGHT = cvar.keySHIFTRIGHT
keyARROWUP = cvar.keyARROWUP
keyCTRLLEFT = cvar.keyCTRLLEFT
keyAPPLEFT = cvar.keyAPPLEFT
keyALT = cvar.keyALT
keySPACE = cvar.keySPACE
keyALTGR = cvar.keyALTGR
keyAPPRIGHT = cvar.keyAPPRIGHT
keyMENU = cvar.keyMENU
keyCTRLRIGHT = cvar.keyCTRLRIGHT
keyARROWLEFT = cvar.keyARROWLEFT
keyARROWDOWN = cvar.keyARROWDOWN
keyARROWRIGHT = cvar.keyARROWRIGHT
keyPAD0 = cvar.keyPAD0
keyPAD1 = cvar.keyPAD1
keyPAD2 = cvar.keyPAD2
keyPAD3 = cvar.keyPAD3
keyPAD4 = cvar.keyPAD4
keyPAD5 = cvar.keyPAD5
keyPAD6 = cvar.keyPAD6
keyPAD7 = cvar.keyPAD7
keyPAD8 = cvar.keyPAD8
keyPAD9 = cvar.keyPAD9
keyPADADD = cvar.keyPADADD
keyPADSUB = cvar.keyPADSUB
keyPADMUL = cvar.keyPADMUL
keyPADDIV = cvar.keyPADDIV
PI = cvar.PI
font10x13 = cvar.font10x13
font12x24 = cvar.font12x24
font16x32 = cvar.font16x32
font29x57 = cvar.font29x57
logo40x38 = cvar.logo40x38

def CImgDisplay__no_display_exception():
  return _CImg.CImgDisplay__no_display_exception()
CImgDisplay__no_display_exception = _CImg.CImgDisplay__no_display_exception

def CImgDisplay_empty():
  return _CImg.CImgDisplay_empty()
CImgDisplay_empty = _CImg.CImgDisplay_empty

def CImgDisplay__fitscreen(*args):
  return _CImg.CImgDisplay__fitscreen(*args)
CImgDisplay__fitscreen = _CImg.CImgDisplay__fitscreen

def CImgDisplay_keycode(*args):
  return _CImg.CImgDisplay_keycode(*args)
CImgDisplay_keycode = _CImg.CImgDisplay_keycode

def CImgDisplay_screen_width():
  return _CImg.CImgDisplay_screen_width()
CImgDisplay_screen_width = _CImg.CImgDisplay_screen_width

def CImgDisplay_screen_height():
  return _CImg.CImgDisplay_screen_height()
CImgDisplay_screen_height = _CImg.CImgDisplay_screen_height

def CImgDisplay_wait(*args):
  return _CImg.CImgDisplay_wait(*args)
CImgDisplay_wait = _CImg.CImgDisplay_wait

def CImgDisplay_wait_all():
  return _CImg.CImgDisplay_wait_all()
CImgDisplay_wait_all = _CImg.CImgDisplay_wait_all

# This file is compatible with both classic and new-style classes.


